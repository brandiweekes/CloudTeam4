// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: nameNode.proto
// </auto-generated>
#pragma warning disable 1591
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using grpc = global::Grpc.Core;

namespace Sufs {
  public static partial class NameNode
  {
    static readonly string __ServiceName = "sufs.NameNode";

    static readonly grpc::Marshaller<global::Sufs.CreateRequest> __Marshaller_CreateRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sufs.CreateRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Sufs.CreateResponse> __Marshaller_CreateResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sufs.CreateResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Sufs.HBrequest> __Marshaller_HBrequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sufs.HBrequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Sufs.HBresponse> __Marshaller_HBresponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sufs.HBresponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Sufs.ReportRequest> __Marshaller_ReportRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sufs.ReportRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Sufs.ReportResponse> __Marshaller_ReportResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sufs.ReportResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Sufs.PathRequest> __Marshaller_PathRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sufs.PathRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Sufs.ListPathResponse> __Marshaller_ListPathResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sufs.ListPathResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Sufs.PathResponse> __Marshaller_PathResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Sufs.PathResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Sufs.CreateRequest, global::Sufs.CreateResponse> __Method_CreateFile = new grpc::Method<global::Sufs.CreateRequest, global::Sufs.CreateResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "CreateFile",
        __Marshaller_CreateRequest,
        __Marshaller_CreateResponse);

    static readonly grpc::Method<global::Sufs.HBrequest, global::Sufs.HBresponse> __Method_Heartbeat = new grpc::Method<global::Sufs.HBrequest, global::Sufs.HBresponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Heartbeat",
        __Marshaller_HBrequest,
        __Marshaller_HBresponse);

    static readonly grpc::Method<global::Sufs.ReportRequest, global::Sufs.ReportResponse> __Method_BlockReport = new grpc::Method<global::Sufs.ReportRequest, global::Sufs.ReportResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BlockReport",
        __Marshaller_ReportRequest,
        __Marshaller_ReportResponse);

    static readonly grpc::Method<global::Sufs.PathRequest, global::Sufs.ListPathResponse> __Method_ListDirectory = new grpc::Method<global::Sufs.PathRequest, global::Sufs.ListPathResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListDirectory",
        __Marshaller_PathRequest,
        __Marshaller_ListPathResponse);

    static readonly grpc::Method<global::Sufs.PathRequest, global::Sufs.PathResponse> __Method_AddDirectory = new grpc::Method<global::Sufs.PathRequest, global::Sufs.PathResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddDirectory",
        __Marshaller_PathRequest,
        __Marshaller_PathResponse);

    static readonly grpc::Method<global::Sufs.PathRequest, global::Sufs.PathResponse> __Method_DeleteDirectory = new grpc::Method<global::Sufs.PathRequest, global::Sufs.PathResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDirectory",
        __Marshaller_PathRequest,
        __Marshaller_PathResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Sufs.NameNodeReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of NameNode</summary>
    public abstract partial class NameNodeBase
    {
      public virtual global::System.Threading.Tasks.Task CreateFile(global::Sufs.CreateRequest request, grpc::IServerStreamWriter<global::Sufs.CreateResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Sufs.HBresponse> Heartbeat(global::Sufs.HBrequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Sufs.ReportResponse> BlockReport(global::Sufs.ReportRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Sufs.ListPathResponse> ListDirectory(global::Sufs.PathRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Sufs.PathResponse> AddDirectory(global::Sufs.PathRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Sufs.PathResponse> DeleteDirectory(global::Sufs.PathRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for NameNode</summary>
    public partial class NameNodeClient : grpc::ClientBase<NameNodeClient>
    {
      /// <summary>Creates a new client for NameNode</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public NameNodeClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for NameNode that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public NameNodeClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected NameNodeClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected NameNodeClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual grpc::AsyncServerStreamingCall<global::Sufs.CreateResponse> CreateFile(global::Sufs.CreateRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return CreateFile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::Sufs.CreateResponse> CreateFile(global::Sufs.CreateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_CreateFile, null, options, request);
      }
      public virtual global::Sufs.HBresponse Heartbeat(global::Sufs.HBrequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Heartbeat(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Sufs.HBresponse Heartbeat(global::Sufs.HBrequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Heartbeat, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Sufs.HBresponse> HeartbeatAsync(global::Sufs.HBrequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return HeartbeatAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Sufs.HBresponse> HeartbeatAsync(global::Sufs.HBrequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Heartbeat, null, options, request);
      }
      public virtual global::Sufs.ReportResponse BlockReport(global::Sufs.ReportRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return BlockReport(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Sufs.ReportResponse BlockReport(global::Sufs.ReportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BlockReport, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Sufs.ReportResponse> BlockReportAsync(global::Sufs.ReportRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return BlockReportAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Sufs.ReportResponse> BlockReportAsync(global::Sufs.ReportRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BlockReport, null, options, request);
      }
      public virtual global::Sufs.ListPathResponse ListDirectory(global::Sufs.PathRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListDirectory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Sufs.ListPathResponse ListDirectory(global::Sufs.PathRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListDirectory, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Sufs.ListPathResponse> ListDirectoryAsync(global::Sufs.PathRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ListDirectoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Sufs.ListPathResponse> ListDirectoryAsync(global::Sufs.PathRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListDirectory, null, options, request);
      }
      public virtual global::Sufs.PathResponse AddDirectory(global::Sufs.PathRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddDirectory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Sufs.PathResponse AddDirectory(global::Sufs.PathRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddDirectory, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Sufs.PathResponse> AddDirectoryAsync(global::Sufs.PathRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddDirectoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Sufs.PathResponse> AddDirectoryAsync(global::Sufs.PathRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddDirectory, null, options, request);
      }
      public virtual global::Sufs.PathResponse DeleteDirectory(global::Sufs.PathRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteDirectory(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Sufs.PathResponse DeleteDirectory(global::Sufs.PathRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDirectory, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Sufs.PathResponse> DeleteDirectoryAsync(global::Sufs.PathRequest request, grpc::Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return DeleteDirectoryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Sufs.PathResponse> DeleteDirectoryAsync(global::Sufs.PathRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDirectory, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override NameNodeClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new NameNodeClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(NameNodeBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateFile, serviceImpl.CreateFile)
          .AddMethod(__Method_Heartbeat, serviceImpl.Heartbeat)
          .AddMethod(__Method_BlockReport, serviceImpl.BlockReport)
          .AddMethod(__Method_ListDirectory, serviceImpl.ListDirectory)
          .AddMethod(__Method_AddDirectory, serviceImpl.AddDirectory)
          .AddMethod(__Method_DeleteDirectory, serviceImpl.DeleteDirectory).Build();
    }

  }
}
#endregion
